/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9 */

#ifndef PB_STATUS_PB_H_INCLUDED
#define PB_STATUS_PB_H_INCLUDED
#include "pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* / Changes the way the rover listens to incoming commands.
/ 
/ - When IDLE, all subsystems will ignore all commands
/ - When MANUAL, all subsystems will accept all commands
/ - When AUTONOMOUS, the rover will ignore commands from the dashboard */
typedef enum _RoverStatus {
    RoverStatus_DISCONNECTED = 0, /* no signal at all means disconnected */
    RoverStatus_IDLE = 1, /* Yellow button should be lit. */
    RoverStatus_MANUAL = 2, /* Must show blue LEDs. Green button should be lit. */
    RoverStatus_AUTONOMOUS = 3, /* See [AutonomyState] for LED colors */
    RoverStatus_POWER_OFF = 4, /* Press the red button to turn off the Pis on the rover */
    RoverStatus_RESTART = 5 /* Reboots the program that receives this message */
} RoverStatus;

/* Struct definitions */
/* / Update a sensitive setting, such as the rover's status.
/ 
/ This message must be triggered manually and the recipient (usually the subsystems Pi)
/ must respond with the exact same message to confirm its receipt. */
typedef struct _UpdateSetting {
    RoverStatus status;
} UpdateSetting;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _RoverStatus_MIN RoverStatus_DISCONNECTED
#define _RoverStatus_MAX RoverStatus_RESTART
#define _RoverStatus_ARRAYSIZE ((RoverStatus)(RoverStatus_RESTART+1))

#define UpdateSetting_status_ENUMTYPE RoverStatus


/* Initializer values for message structs */
#define UpdateSetting_init_default               {_RoverStatus_MIN}
#define UpdateSetting_init_zero                  {_RoverStatus_MIN}

/* Field tags (for use in manual encoding/decoding) */
#define UpdateSetting_status_tag                 1

/* Struct field encoding specification for nanopb */
#define UpdateSetting_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    status,            1)
#define UpdateSetting_CALLBACK NULL
#define UpdateSetting_DEFAULT NULL

extern const pb_msgdesc_t UpdateSetting_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define UpdateSetting_fields &UpdateSetting_msg

/* Maximum encoded size of messages (where known) */
#define STATUS_PB_H_MAX_SIZE                     UpdateSetting_size
#define UpdateSetting_size                       2

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
